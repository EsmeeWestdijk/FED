/**************/
/* CSS REMEDY */
/**************/
*,
*::after,
*::before {
	box-sizing: border-box;
}






/*********************/
/* CUSTOM PROPERTIES */
/*********************/
:root {
	/* startje */
	/*color-scheme: light dark;*/

	--color-text: #111;
	--color-background: #eee;

	--font-family: Avenir Next, Helvetica;
}

/*@media (prefers-color-scheme:dark){
	:root{
		--color-dark-background: #111;
		--color-dark-text: #eee; 

	}
}

html:has( [value="light"]:checked){
	color-scheme: light;
}

html:has( [value="dark"]:checked){
	color-scheme: dark;
}*/


/****************/
/* JOUW STYLING */
/****************/

/* jouw code */



body {
	font-family: var(--font-family);
	background-color: var(--color-background);
}

button {
	background-color: var(--color-button);
	color: var(--color-text-button);
}

a:hover{
	color: rgb(0, 213, 255);
	text-decoration: underline;
}

a:active{
	color: rgba(0, 213, 255, 0.721);
	font-size: medium;

}

a:visited{
	color: blue;
}

a:focus{
	border-color: aqua;

}

main>section:nth-of-type(1) ul {
	list-style: none;
	display: flex;
	padding: 0;
	margin: 0;
	overflow-x: auto; 



}

main>section:nth-of-type(1) li {
	flex-shrink: 0;
	margin: 0;
	width: 18em;
	position: relative;

	display: grid; 
	grid-template-columns: 1fr;

}

main>section:nth-of-type(1) li img{
	display: block;
	margin: 0;
	width: 100%;
	aspect-ratio: 3/4;
	border-radius: 1em;
	grid-row: 1; 
	z-index: 0; 
}

/*bron: chatGPT voor schaaling van de afbeelding. 
  Promt: hoe krijg ik de afbeeldingen precies zoals op de foto in breedte en hoogte? 
  Antwoord: width: 260px en aspect-ratio: 3 / 4: Hiermee zorg je voor een consistente breedte en hoogteverhouding (3:4), zoals in je voorbeeld.
  object-fit: cover in de img: Dit zorgt ervoor dat de afbeelding de hele container vult zonder vervorming, terwijl het beeld wordt bijgesneden als dat nodig is.*/


main > section:nth-of-type(1) li h2,
main > section:nth-of-type(1) li p {
	position: absolute;
	left: 50%;
	color: black;
	text-align: center;
	width: 100%;
	margin: 0;

	z-index: 1;


}

main > section:nth-of-type(1) li h2 {
   top: 20%

}



main > section:nth-of-type(1) li p {
	bottom: 10%; 
	width: 80%;
}

/*main > section:nth-of-type(1) ul {
	display: flex;
	overflow-x: auto; 
	margin: 0;
}

main > section:nth-of-type(1) li{
	flex-shrink: 0;
	list-style-type: none;
}

main > section:nth-of-type(1) li img{
	width: 30em; 
	height: 100%;
	margin: 0;
}*/


main>section:nth-of-type(2) ul {
	display: flex;
	overflow-x: auto;
	justify-content: flex-start;
	align-items: center;
	gap: 2em;

}

main>section:nth-of-type(2) li {
	flex-shrink: 0;
	list-style-type: none;

}

main>section:nth-of-type(2) li img {
	width: 8em;
	margin-right: .125em;
	display: block;
}



main>section:nth-of-type(3) ul {
	display: flex;
	overflow-x: auto;
	margin: 0;
	padding: 0;
}

main>section:nth-of-type(3) li {
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: auto 1fr auto;
	background-color: black;
	color: #eee;
	margin: 0;
}

/* bron: Chatgpt om te herhalen hoe je ook alweer een grid moest opstellen
Promt: Hoe kan ik twee foto's op elkaar plaatsen en tekst met grid zoals dit (foto)?
Antwoord: 
display: grid;: Dit maakt de li-tag de grid container. Hiermee vertel je de browser dat alles binnen deze li-tag op een grid moet worden geplaatst.
grid-template-columns: 1fr;: Dit zorgt ervoor dat de li slechts één kolom heeft die zich uitstrekt over de gehele breedte. 1fr betekent "één fractie" van de beschikbare ruimte, dus het vult altijd de breedte op die beschikbaar is.
grid-template-rows: auto 1fr auto;: Dit definieert de rijen binnen het grid:
De eerste rij heeft een automatische hoogte (dit betekent dat de hoogte van de rij wordt bepaald door de hoogte van de inhoud).
De tweede rij neemt de rest van de ruimte in (door gebruik te maken van 1fr).
De derde rij heeft weer een automatische hoogte.*/

main>section:nth-of-type(3) img:first-of-type {
	grid-row: 1;
	display: block;
	margin: 0;
	width: 27em;
	padding: 0;

	grid-row-start: 1;
	grid-column-start: 1;

	z-index: 0;
}

main>section:nth-of-type(3) img:last-of-type {
	grid-row: 2;
	display: block;
	margin: 0 auto;
	width: 6em;

	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: end;
	align-self: end;
	margin-left: 1em;

	z-index: 3;
}


main>section:nth-of-type(3) li h3 {
	grid-row: 3;
	margin-top: 1em;
	padding: 1em;
	text-transform: uppercase;
	font-weight: 200;
	font-size: x-small;
	line-height: 0.5em;
}

main>section:nth-of-type(3) li p {
	grid-row: 4;
	margin: 0;
	padding: 1em;
	background-color: black;
	color: #eee;
	font-weight: 500;
	font-size: small;
	padding-bottom: 2em;
	line-height: 1.5em;

}


main>section:nth-of-type(4) h2,
section:nth-of-type(3) h2,
section:nth-of-type(5) h2,
section:nth-of-type(6) h2 {
	text-transform: uppercase;
	font-size: medium;
	display: flex;
	align-items: flex-start;
	margin-left: 1em;
	font-weight: 200;
	font-size: small;
	padding-bottom: 1em;
}



main>section:nth-of-type(4) li h3 {
	order: 2;
	text-transform: uppercase;
	font-weight: 200;
	font-size: smaller;

}

main>section:nth-of-type(4) li p {
	order: 3;
	font-weight: 100;
	font-size: small;
	line-height: 0.1em;
}

main>section:nth-of-type(4) ul {
	display: flex;
	overflow-x: auto;
	gap: 1em;
}

main>section:nth-of-type(4) li {
	display: grid;
	flex-shrink: 0;
	list-style-type: none;
	align-content: start;

}

main>section:nth-of-type(4) li img {
	width: 10em;
	padding-bottom: 0;

	grid-row-start: 1;
	grid-column-start: 1;

	z-index: 0;
}

main>section:nth-of-type(4) li button img {
	padding: 0;
	margin: 0;
	width: 3em;

	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: end;
	align-self: end;

	z-index: 1;
}

main>section:nth-of-type(4) li button {
	background: none;
	border: none;
	padding-left: 6em;
}


main>section:nth-of-type(4) p:nth-of-type(6) {
	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: start;
	align-self: start;

	margin: 1em;
	background-color: crimson;
	color: #eee;
	padding: 0.5em;

	z-index: 1;

}

/*bron: Sanne uitleg in de les grid*/

main>section:nth-of-type(4) li:nth-of-type(1) p:nth-of-type(4) {
	color: purple;
	font-size: medium;
	font-weight: 700;
}

main>section:nth-of-type(4) li:nth-of-type(1) p:nth-of-type(5) {
	font-size: x-small;
}



main>section:nth-of-type(4) li:nth-of-type(2) p:nth-of-type(2) {
	color: purple;
	font-size: medium;
	font-weight: 700;
}

main>section:nth-of-type(4) li:nth-of-type(2) p:nth-of-type(3) {
	font-size: x-small;
}


main>section:nth-of-type(4) li:nth-of-type(3) p:nth-of-type(5) {
	color: purple;
	font-size: medium;
	font-weight: 700;
}



main>section:nth-of-type(5) ul {
	display: flex;
	overflow-x: auto;
	margin: 0;
	padding: 0;
}

main>section:nth-of-type(5) li {
	flex-shrink: 0;
	list-style-type: none;
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
}

main>section:nth-of-type(5) li img {
	width: 15em;
	order: 1;
	padding-right: 0.12em;
}

main>section:nth-of-type(5) li h3 {
	order: 2;
	text-transform: uppercase;
	font-weight: 200;
	font-size: small;
	margin-bottom: 0.2em;
	padding-left: 1em;

}

main>section:nth-of-type(5) li p {
	order: 3;
	font-weight: 100;
	font-size: small;
	line-height: 0.1em;
	padding-left: 1em;
}

main>section:nth-of-type(5) li p:nth-of-type(2) {
	font-size: x-small;
	padding-bottom: 1em;
}


main>section:nth-of-type(6) {}

main>section:nth-of-type(6) ul {
	display: flex;
	overflow-x: auto;
	margin: 1em;
	padding: 0;
}

main>section:nth-of-type(6) li {
	flex-shrink: 0;
	flex-direction: column;
	list-style-type: none;

	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: auto 1fr auto;
}

main>section:nth-of-type(6) li img:first-of-type {
	aspect-ratio: 4/6;
	width: 15em;
	padding-right: 0.12em;

	grid-row: 1;
	display: block;
	grid-row-start: 1;
	grid-column-start: 1;

	z-index: 0;

}

main>section:nth-of-type(6) li img:nth-of-type(2) {
	width: 6em;
	grid-row: 2;
	display: block;

	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: start;
	align-self: end;
	margin-left: 1em;
	margin-top: 3em;

	z-index: 3;
}



main>section:nth-of-type(6) li img:nth-of-type(3) {
	border-radius: 5em;
	width: 5em;
	border-color: #eee;

	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: start;
	align-self: start;
	margin-top: 3em;
	margin-left: 2em;

	z-index: 1;

}

main>section:nth-of-type(6) li h2 {
	grid-row: 2;
}


main>section:nth-of-type(6) li p:first-of-type {
	color: #eee;
	font-size: small;

	grid-row-start: 1;
	grid-column-start: 1;

	justify-self: start;
	align-self: start;
	margin-top: 5em;
	margin-left: 10em;

	z-index: 1;
}

main>section:nth-of-type(6) li p:nth-of-type(2) {
	grid-row: 2;
	font-weight: 300;
	font-size: small;
	overflow: hidden;
	background-color: #eee;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;

}

main>section:nth-of-type(6) li p:nth-of-type(3) {
	grid-row: 2;
	font-weight: 200;
	font-size: x-small;
	overflow: hidden;
}


main>section:nth-of-type(6) a {
	font-size: small;
}